# -*- coding: utf-8 -*-
"""Videogame_task2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15Guilgn9MVpKpw6BqR5oNg6yjUTo7jzA
"""

import pandas as pd
import numpy as np

df=pd.read_csv('/content/Video Games Sales.csv')

df.isnull().sum()

df.dropna(inplace=True)

df.head()

df.isnull().sum()

value_to_check = 'Unknown'
result = df[df['Publisher'] == value_to_check]
print(result)

checks = 'Unknown'
result = df[df['Publisher'] == checks]
print(result)

value_to_check = 'Unknown'
filtered_data = df.drop(df[df['Publisher'] == value_to_check].index)
data = filtered_data

import seaborn as sns
import matplotlib.pyplot as plt

name_count_by_year = data.groupby('Year')['Game Title'].nunique()

plt.figure(figsize=(10, 6))
plt.bar(name_count_by_year.index, name_count_by_year.values)
plt.title('Count Games')
plt.xlabel('Year')
plt.ylabel('Count Games')
plt.grid(axis='y')
plt.xticks(name_count_by_year.index, rotation=90)

plt.show()

df_sorted = df.sort_values(by='Review', ascending=False)
N = 10
plt.figure(figsize=(12, 6))
plt.barh(df_sorted['Game Title'].head(N), df_sorted['Review'].head(N))
plt.title(f'Top {N} Highest-Reviewed Games')
plt.xlabel('Review Score')
plt.ylabel('Game Title')
plt.gca().invert_yaxis()
plt.show()

df['Genre'].value_counts()

bars=df.Genre.value_counts()
bars.plot(kind="bar",title='Top Genres',figsize=(8,5))
plt.show()

plt.figure(figsize=(30, 10))
sns.countplot(x="Year", data=df, hue='Genre', order=data.Year.value_counts().iloc[:5].index)
plt.xticks(size=16, rotation=90)

top_publisher = data.groupby(by=['Publisher'])['Year'].count().sort_values(ascending=False).head(20)
top_publisher = pd.DataFrame(top_publisher).reset_index()

plt.figure(figsize=(15, 10))
sns.countplot(x="Publisher", data=data, order = data.groupby(by=['Publisher'])['Year'].count().sort_values(ascending=False).iloc[:20].index)
plt.xticks(rotation=90)

platform_counts = df['Platform'].value_counts().reset_index()
platform_counts.columns = ['Platform', 'Number of Games']
plt.figure(figsize=(12, 6))
plt.bar(platform_counts['Platform'], platform_counts['Number of Games'])
plt.title('Number of Games Published by Platforms')
plt.xlabel('Platform')
plt.ylabel('Number of Games')
plt.xticks(rotation=45)
plt.show()

publisher_counts = df['Publisher'].value_counts()

highest_publisher = publisher_counts.idxmax()
highest_publisher_count = publisher_counts.max()

print(f"The publisher with the highest number of games is: {highest_publisher}")
print(f"Number of games published by the highest publisher: {highest_publisher_count}")

